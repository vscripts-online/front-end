/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as AdminImport } from './routes/_admin'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardDashboardIndexImport } from './routes/_dashboard/dashboard/index'
import { Route as AdminAdminIndexImport } from './routes/_admin/admin/index'
import { Route as DashboardDashboardFilesIndexImport } from './routes/_dashboard/dashboard/files/index'
import { Route as AdminAdminUsersIndexImport } from './routes/_admin/admin/users/index'
import { Route as AdminAdminFilesIndexImport } from './routes/_admin/admin/files/index'
import { Route as AdminAdminAccountsIndexImport } from './routes/_admin/admin/accounts/index'
import { Route as DashboardDashboardFilesidIndexImport } from './routes/_dashboard/dashboard/files/$_id/index'
import { Route as AdminAdminUsersIdIndexImport } from './routes/_admin/admin/users/$id/index'
import { Route as AdminAdminFilesidIndexImport } from './routes/_admin/admin/files/$_id/index'
import { Route as AdminAdminAccountsCreateIndexImport } from './routes/_admin/admin/accounts/create/index'
import { Route as AdminAdminAccountsidIndexImport } from './routes/_admin/admin/accounts/$_id/index'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardDashboardIndexRoute = DashboardDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => DashboardRoute,
} as any)

const AdminAdminIndexRoute = AdminAdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => AdminRoute,
} as any)

const DashboardDashboardFilesIndexRoute =
  DashboardDashboardFilesIndexImport.update({
    path: '/dashboard/files/',
    getParentRoute: () => DashboardRoute,
  } as any)

const AdminAdminUsersIndexRoute = AdminAdminUsersIndexImport.update({
  path: '/admin/users/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminFilesIndexRoute = AdminAdminFilesIndexImport.update({
  path: '/admin/files/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminAccountsIndexRoute = AdminAdminAccountsIndexImport.update({
  path: '/admin/accounts/',
  getParentRoute: () => AdminRoute,
} as any)

const DashboardDashboardFilesidIndexRoute =
  DashboardDashboardFilesidIndexImport.update({
    path: '/dashboard/files/$_id/',
    getParentRoute: () => DashboardRoute,
  } as any)

const AdminAdminUsersIdIndexRoute = AdminAdminUsersIdIndexImport.update({
  path: '/admin/users/$id/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminFilesidIndexRoute = AdminAdminFilesidIndexImport.update({
  path: '/admin/files/$_id/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminAccountsCreateIndexRoute =
  AdminAdminAccountsCreateIndexImport.update({
    path: '/admin/accounts/create/',
    getParentRoute: () => AdminRoute,
  } as any)

const AdminAdminAccountsidIndexRoute = AdminAdminAccountsidIndexImport.update({
  path: '/admin/accounts/$_id/',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_admin/admin/': {
      id: '/_admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_dashboard/dashboard/': {
      id: '/_dashboard/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_admin/admin/accounts/': {
      id: '/_admin/admin/accounts/'
      path: '/admin/accounts'
      fullPath: '/admin/accounts'
      preLoaderRoute: typeof AdminAdminAccountsIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/files/': {
      id: '/_admin/admin/files/'
      path: '/admin/files'
      fullPath: '/admin/files'
      preLoaderRoute: typeof AdminAdminFilesIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/users/': {
      id: '/_admin/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminAdminUsersIndexImport
      parentRoute: typeof AdminImport
    }
    '/_dashboard/dashboard/files/': {
      id: '/_dashboard/dashboard/files/'
      path: '/dashboard/files'
      fullPath: '/dashboard/files'
      preLoaderRoute: typeof DashboardDashboardFilesIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_admin/admin/accounts/$_id/': {
      id: '/_admin/admin/accounts/$_id/'
      path: '/admin/accounts/$_id'
      fullPath: '/admin/accounts/$_id'
      preLoaderRoute: typeof AdminAdminAccountsidIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/accounts/create/': {
      id: '/_admin/admin/accounts/create/'
      path: '/admin/accounts/create'
      fullPath: '/admin/accounts/create'
      preLoaderRoute: typeof AdminAdminAccountsCreateIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/files/$_id/': {
      id: '/_admin/admin/files/$_id/'
      path: '/admin/files/$_id'
      fullPath: '/admin/files/$_id'
      preLoaderRoute: typeof AdminAdminFilesidIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/users/$id/': {
      id: '/_admin/admin/users/$id/'
      path: '/admin/users/$id'
      fullPath: '/admin/users/$id'
      preLoaderRoute: typeof AdminAdminUsersIdIndexImport
      parentRoute: typeof AdminImport
    }
    '/_dashboard/dashboard/files/$_id/': {
      id: '/_dashboard/dashboard/files/$_id/'
      path: '/dashboard/files/$_id'
      fullPath: '/dashboard/files/$_id'
      preLoaderRoute: typeof DashboardDashboardFilesidIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AdminRoute: AdminRoute.addChildren({
    AdminAdminIndexRoute,
    AdminAdminAccountsIndexRoute,
    AdminAdminFilesIndexRoute,
    AdminAdminUsersIndexRoute,
    AdminAdminAccountsidIndexRoute,
    AdminAdminAccountsCreateIndexRoute,
    AdminAdminFilesidIndexRoute,
    AdminAdminUsersIdIndexRoute,
  }),
  DashboardRoute: DashboardRoute.addChildren({
    DashboardDashboardIndexRoute,
    DashboardDashboardFilesIndexRoute,
    DashboardDashboardFilesidIndexRoute,
  }),
})

/* prettier-ignore-end */
